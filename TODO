Major tasks
-----------

 * block compile()?
 * .execute(code, locals={}) deny creation of new local variables
 * interpreter.py has a quit() builtin function (instance of site.Quitter)
   which is not protected by a proxy
 * safe_import(): from_list default value is mutable
 * SandboxConfig.allowModuleSourceCode(): don't import the module just to get
   the filename
 * safe_open() should not use createReadOnlyObject(), but just hide the real
   type
 * Python3:
   - fix proxy.py: Python3 has no builtin file type
   - fix proxy.py: Python3 has no types.ClassType nor types.InstanceType
   - fix safe_open.py: open() doesn't accept buffering=None
   - fix builtins.py: Python3 has no __builtin__ module
 * Write a blacklist for ObjectProxy (eg. "__class__" attribute)
 * Write a whitelist of modifiable attributes in ObjectProxy?
   Problem of callback: have to be executed in the sandbox
 * Write a cache for safe_import. Reuse sys.modules???

Open questions
--------------

 * Deny creation of an arbitray code object? type(lambda: 0), compile(),
   generator.gi_code, ...
 * Deny builtins: execfile?, reload?, input?, eval?
 * A function keeps its func_globals. Is it a problem?
 * A generator can be controled: .throw(), .send(), etc. Is it a problem if the
   generator was created outside the sandbox?

Minor tasks
-----------

 * Write a test using class.mro()?
 * __builtins__ can be redefined
 * isinstance(createReadOnlyList(...), list) is False
 * Write a whitelist for sys.path?
 * Clear sys.modules?
 * Improve type(open(...))(filename, "r") error message,
   see test_import_sys_stdout()

Todo later
----------

 * Check interaction with threads
 * Check interaction with signals, eg. SIGALARM and SIGTERM
   http://mail.python.org/pipermail/python-dev/2009-February/086425.html
 * Check for function importing modules:
   warnings imports modules
   > if there are other non-user-initiated dynamically imported modules?
   Grep the source for PyImport.
 * RuntimeError: maximum recursion depth exceeded
   import sys; sys.setrecursionlimit(50)
   http://mail.python.org/pipermail/python-dev/2009-February/086463.html
 * Fix "raise" in interpreter.py. Is it really a problem?
 * Limit memory usage

